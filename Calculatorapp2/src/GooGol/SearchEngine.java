/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GooGol;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Random;
import java.util.Scanner;

/**
 *
 * @author umarazif
 */
public class SearchEngine extends javax.swing.JFrame {

    Scanner s = new Scanner(System.in);

    /**
     * Creates new form SearchEngine
     */
    public SearchEngine() {
        initComponents();
        jScrollPane1.setOpaque(false);
        jScrollPane1.getViewport().setOpaque(false);
        jScrollPane1.setBorder(null);
        jScrollPane1.setViewportBorder(null);
        
        jTextArea1.setBorder(null);
        jTextArea1.setBackground(new java.awt.Color(72,32,98));
        
        jLabel1.setIcon(new javax.swing.ImageIcon("Background 2.jpg")); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1540, 900);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GooGol");
        setLocation(new java.awt.Point(100, 100));
        setMinimumSize(new java.awt.Dimension(1533, 841));
        setResizable(false);
        getContentPane().setLayout(null);

        jTextField1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1);
        jTextField1.setBounds(520, 200, 500, 50);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Product Sans", 0, 24)); // NOI18N
        jTextArea1.setForeground(java.awt.Color.white);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(20);
        jTextArea1.setBorder(null);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(340, 260, 880, 630);

        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1540, 900);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
        jTextField1.setText(jTextField1.getText());
        String in = jTextField1.getText();
        //to check if user input game/tictactoe
        if(in.toLowerCase().contains("tic tac toe") || in.toLowerCase().contains("tictactoe")){
            VSbot game = new VSbot();
            game.setVisible(true);
        }
        
        //to check if user input minigame
        if(in.toLowerCase().contains("googol.io")||in.toLowerCase().contains("googol")){
            Googol_IO leap = new Googol_IO();
            leap.setVisible(true);
        }
        //to check if user input eqn
        if (in.charAt(0) == '(' || in.contains("+") || in.contains("-") || in.contains("/") || in.contains("*")) {
            CalculatorGUI kalat2 = new CalculatorGUI(in);
            kalat2.setVisible(true);
        } else {
            if (in.contains("sin") || in.contains("cos") || in.contains("tan")) {
                //to check sin(, cos(, tan(
                if (in.charAt(in.indexOf('n') + 1) == '(' || in.charAt(in.indexOf('s') + 1) == '(') {
                    CalculatorGUI kalat3 = new CalculatorGUI(in);
                    kalat3.setVisible(true);
                }
            }
        }
        //to check if user calls calculator
        if (in.toLowerCase().contains("calculator")) {
            CalculatorGUI kalat = new CalculatorGUI();
            kalat.setVisible(true);
        } else {
            Search();
        }

        //to check if user input roll dice
        if (in.toLowerCase().contains("dice") || in.toLowerCase().contains("roll")) {
            Random r = new Random();
            int num = r.nextInt(6)+1;
            jTextArea1.setText("You rolled a " + Integer.toString(num));
        }

        //to check if user input currency converter
        if (in.toLowerCase().contains("currency") || in.toLowerCase().contains("converter")) {
            CurrencyExchangeGUI cur1 = new CurrencyExchangeGUI();
            cur1.setVisible(true);
        }
        
        //to check if user input currency unit
        if (in.toUpperCase().contains("MYR") || in.toUpperCase().contains("SGD") || in.toUpperCase().contains("VND") || in.toUpperCase().contains("IDR") || in.toUpperCase().contains("PHP") ||
            in.toUpperCase().contains("THB") || in.toUpperCase().contains("KHR") || in.toUpperCase().contains("LAK") || in.toUpperCase().contains("MMK") || in.toUpperCase().contains("BND") ||
            in.toUpperCase().contains("USD")) {
            CurrencyExchangeGUI cur2 = new CurrencyExchangeGUI(in);
            cur2.setVisible(true);
        }
    }//GEN-LAST:event_jTextField1ActionPerformed

    public void Search() {
        String input = jTextField1.getText();
        String result = "";
        int counter = 0; //to control number of index for arr
        int max = 201; //to control the max run for while loop
        int run = 0; //to control the max run for while loop
        String str; //to hold string for splitting
        String[] arr = new String[402]; //to store split string as elements
        try {
            Scanner all = new Scanner(new FileInputStream("AllWebsites.txt"));
            Scanner website = new Scanner(new FileInputStream("Websites2.txt"));
            Scanner tag = new Scanner(new FileInputStream("Tags2.txt"));
            int i = 0;
            int j = 0;
            String[] allwebsites = new String[673678];
            String[] websites = new String[816];
            String[] arraytag = new String[816];
            
            while(all.hasNextLine()){
                String allinput = all.nextLine();
                allwebsites[j] = allinput;
                j++;  
            }
            
            while(website.hasNextLine()){
                String webinput = website.nextLine();
                websites[i] = webinput;
                String taginput = tag.nextLine();
                String format = taginput.toLowerCase();
                arraytag[i] = format;
                i++;
            }
            
            for(i = 0; i < arraytag.length; i++){
                if(arraytag[i].contains(input)){
                    result = result + websites[i] + "\n";
                }
            }
            if(result.isEmpty()){
                for(j = 0; j < allwebsites.length; j++){
                    if(allwebsites[j].contains(input)){
                        result = result + allwebsites[j] + "\n";
                    }
                }
                
                result = "//Suggestions Obtained Through Unscraped Websites List//" + "\n" + result;
            }
            
            if(result.equals("//Suggestions Obtained Through Unscraped Websites List//" + "\n")){
                result = "Your search -" + input + "- did not match any sites in the database." + "\n" + "Suggestions: " + "\n"
                        + "Try being more specific" + "\n" + "Check your spelling";
            }
            
        } catch (FileNotFoundException e) {
            System.out.println("File not found!");
        }

        jTextArea1.setText(result);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchEngine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchEngine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchEngine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchEngine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchEngine().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
